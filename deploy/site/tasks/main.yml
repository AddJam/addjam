- name: Create checkout folder
  sudo: yes
  file: path={{ app_cloned_path }} state=directory owner={{ user }}

- name: Update app repository
  tags: run
  git: >
    repo={{ app_github_clone_url }}
    version={{ app_branch }}
    dest={{ app_cloned_path }}
    accept_hostkey=yes
  register: git_repository

- name: Build latest app image
  tags: run
  docker_image: >
    path={{ app_cloned_path }}
    name={{ app_name }}
    state=build
    tag={{ app_branch }}
    nocache=yes
  when: git_repository.changed

- name: Ensure latest app image is present
  tags: run
  docker_image: >
    path={{ app_cloned_path }}
    name={{ app_name }}
    state=present
    tag={{ app_branch }}
    nocache=yes

- name: Start app
  tags: run
  docker: >
    name={{ app_name }}-{{ git_repository.after }}
    image={{ app_name }}:{{ app_branch }}
    ports={{ docker_port }}
    state=running

- name: Find app container public port
  tags: run
  command: docker port {{ app_name }}-{{ git_repository.after }} {{ docker_port }}
  register: app_public_host

- name: Update nginx master vhost
  tags: run
  sudo: yes
  template: src=nginx.j2 dest=/etc/nginx/sites-enabled/{{ app_name }}
  notify: restart nginx

- name: Remove old container
  tags: run
  docker: >
    name={{ app_name }}-{{ git_repository.before }}
    image={{ app_name }}:{{ app_branch }}
    state=absent
  when: git_repository.changed
